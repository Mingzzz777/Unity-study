public class Singletons<T> : MonoBehaviour where T:Singletons<T>
{
    private static T instance;
    public static T Instance
    {
        get { return instance; }
    }
    protected virtual void Awake()
    {
        if (instance != null)
        {
            Destroy(gameObject);
        }
        else
        {
            instance = (T)this;
        }
    }

    public static bool IsIntialized
    {
        get { return instance != null; }
    }

    protected virtual void OnDestory()
    {
        if (instance != null)
        {
            instance = null;
        }
    }
}

